{"version":3,"sources":["Modal.js","winners/BassClef.js","winners/TrebleClef.js","winners/Draw.js","Main.js","App.js","index.js"],"names":["Modal","children","ref","useRef","close","useCallback","current","style","display","className","onClick","BassClef","reload","padding","TrebleClef","Draw","Square","React","memo","inside","x","y","src","alt","width","height","loc","window","location","href","first","URLSearchParams","slice","indexOf","get","getDefaultState","board","Array","fill","map","e","turn","winner","draw","defaultState","reducer","state","action","type","b","line","hs","co","push","j","join","length","checkWinner","Board","useReducer","dispatch","tdClick","row","t","App","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0eac07c.chunk.js","sourcesContent":["import React, { useCallback, useRef } from \"react\";\r\n\r\nfunction Modal({ children }) {\r\n\r\n  let ref = useRef();\r\n\r\n  let close = useCallback(() => {\r\n    ref.current.style.display = \"none\";\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"modal\" ref={ref}>\r\n      <style>\r\n        {`\r\n          .modal {\r\n            position: absolute;\r\n            background: #8ea195;\r\n            padding: 10px;\r\n            top: 17vh;\r\n            left: 10%;\r\n            width: 80%;\r\n            height: 60vh;\r\n            box-shadow: 2px 2px 2px black;\r\n          }\r\n          .cross {\r\n            font-size: 20px;\r\n            position: absolute;\r\n            right: 10px;\r\n          }\r\n        `}\r\n      </style>\r\n      <span className=\"cross\" onClick={close}>&times;</span>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;","import React from \"react\";\r\n\r\nfunction BassClef({ reload }) {\r\n  return (\r\n    <div className=\"BassClef\">\r\n      <h1>Bass Clef won!</h1>\r\n\r\n      <button style={{ padding: \"0 10px\" }}>\r\n        <h3 onClick={() => reload()}>Play Again</h3>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BassClef;","import React from \"react\";\r\n\r\nfunction TrebleClef({ reload }) {\r\n  return (\r\n    <div className=\"TrebleClef\">\r\n      <h1>Treble Clef won!</h1>\r\n\r\n      <button style={{ padding: \"0 10px\" }}>\r\n        <h3 onClick={() => reload()}>Restart Game</h3>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrebleClef;\r\n","import React from \"react\";\r\n\r\nfunction Draw({ reload }) {\r\n  return (\r\n    <div className=\"draw\">\r\n      <h1>Draw / Tie</h1>\r\n\r\n      <button style={{ padding: \"0 10px\" }}>\r\n        <h3 onClick={() => reload()}>Restart</h3>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Draw;","import React, { useCallback, useReducer } from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport BassClef from \"./winners/BassClef\";\r\nimport TrebleClef from \"./winners/TrebleClef\";\r\nimport Draw from \"./winners/Draw\";\r\nlet Square = React.memo(({ inside, onClick, x, y }) => {\r\n  let click = () => {\r\n    if (inside) return;\r\n\r\n    onClick(x, y);\r\n  };\r\n\r\n  let src = \"./logos/\" + (inside === \"B\" ? \"Bass_clef.png\" : \"Treble_clef.png\");\r\n\r\n  return (\r\n    <td onClick={click}>\r\n      {inside && <img src={src} alt={inside} width={75} height={75} />}\r\n    </td>\r\n  );\r\n});\r\n\r\nlet checkWinner = (board) => {\r\n  let lines = [\r\n    [\r\n      [0, 0],\r\n      [1, 1],\r\n      [2, 2],\r\n    ],\r\n    [\r\n      [2, 0],\r\n      [1, 1],\r\n      [0, 2],\r\n    ],\r\n    [\r\n      [0, 0],\r\n      [1, 0],\r\n      [2, 0],\r\n    ],\r\n    [\r\n      [0, 1],\r\n      [1, 1],\r\n      [2, 1],\r\n    ],\r\n    [\r\n      [0, 2],\r\n      [1, 2],\r\n      [2, 2],\r\n    ],\r\n    [\r\n      [0, 0],\r\n      [0, 1],\r\n      [0, 2],\r\n    ],\r\n    [\r\n      [1, 0],\r\n      [1, 1],\r\n      [1, 2],\r\n    ],\r\n    [\r\n      [2, 0],\r\n      [2, 1],\r\n      [2, 2],\r\n    ],\r\n  ];\r\n\r\n  for (let line of lines) {\r\n    let hs = [];\r\n    for (let co of line) {\r\n      let [x, y] = co;\r\n      hs.push(board[y][x]);\r\n    }\r\n    let j = hs.join(\"\");\r\n    if (j === \"BBB\") return \"B\";\r\n    if (j === \"TTT\") return \"T\";\r\n  }\r\n\r\n  \r\n  if (board.map((b) => b.join(\"\")).join(\"\").length === 9) {\r\n    return \"D\";\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nlet loc = window.location.href;\r\nlet params = new URLSearchParams(loc.slice(loc.indexOf(\"?\")));\r\nlet first = params.get(\"first\") || \"T\";\r\n\r\nif (first === \"Treble Clef\") first = \"T\";\r\nif (first === \"Bass Clef\") first = \"B\";\r\n\r\nif (first !== \"T\" && first !== \"B\") {\r\n  first = \"T\";\r\n}\r\n\r\nlet getEmptyBoard = () =>\r\n  Array(3)\r\n    .fill(0)\r\n    .map((e) => Array(3).fill(null));\r\n\r\nlet getDefaultState = () => ({\r\n  board: getEmptyBoard(),\r\n  turn: first,\r\n  winner: null,\r\n  draw: false,\r\n});\r\n\r\nlet defaultState = getDefaultState();\r\n\r\nlet reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"move\":\r\n      if (state.winner) return state;\r\n\r\n      let board = state.board.map((b) => b.slice());\r\n      board[action.y][action.x] = state.turn;\r\n\r\n      let winner = checkWinner(board);\r\n\r\n      return {\r\n        board,\r\n        turn: state.turn === \"B\" ? \"T\" : \"B\",\r\n        winner: winner === \"D\" ? null : winner,\r\n        draw: winner === \"D\" ? true : false,\r\n      };\r\n    case \"reload\":\r\n      return getDefaultState();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nlet Board = () => {\r\n  let [{ board, turn, winner, draw }, dispatch] = useReducer(\r\n    reducer,\r\n    defaultState\r\n  );\r\n\r\n  let reload = useCallback(() => {\r\n    dispatch({\r\n      type: \"reload\",\r\n    });\r\n  }, []);\r\n\r\n  let tdClick = useCallback((x, y) => {\r\n    dispatch({ type: \"move\", x, y });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main\">\r\n        <table className=\"board\">\r\n          <tbody>\r\n            {board.map((row, y) => (\r\n              <tr key={y}>\r\n                {row.map((t, x) => (\r\n                  <Square inside={t} key={x} x={x} y={y} onClick={tdClick} />\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        {!winner && (\r\n          <h2>It's {turn === \"B\" ? \"Bass Clef\" : \"Treble Clef\"}'s turn.</h2>\r\n        )}\r\n      </div>\r\n      {winner && (\r\n        <>\r\n          <h1>Winner is {winner === \"B\" ? \"Bass Clef\" : \"Treble Clef\"}</h1>\r\n          <Modal>\r\n            {winner === \"B\" && <BassClef reload={reload} />}\r\n            {winner === \"T\" && <TrebleClef reload={reload} />}\r\n          </Modal>\r\n        </>\r\n      )}\r\n      {draw && (\r\n        <Modal>\r\n          <Draw reload={reload} />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Board;\r\n","import React from 'react';\nimport Main from \"./Main\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Main />\n\n      <footer>\n        <h5>\n          Check out <a href=\"https://primopiano4u.github.io/\">Primopiano4u's website</a> and <a href=\"https://skl.sh/32NP8fY\">Back to Basics Piano Lessons</a>\n        </h5>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}